"""
Django settings for PDS_Apps project.

Generated by 'django-admin startproject' using Django 4.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from django_auth_ldap.config import LDAPSearch
import ldap
from pathlib import Path
import os
import logging
from pymongo import MongoClient
from django.utils.translation import gettext_lazy as _
# from django.core.urlresolvers import reverse_lazy
from django.urls import reverse_lazy
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# LDAP
ldap.set_option(ldap.OPT_X_TLS_REQUIRE_CERT, ldap.OPT_X_TLS_NEVER)
AUTH_LDAP_START_TLS = True
#AUTH_LDAP_SERVER_URI = "ldap://plblop-dc04.delphidrive.com"
#AUTH_LDAP_BIND_DN = "SID_PLBLOSECURITY@delphidrive.com"
#AUTH_LDAP_BIND_PASSWORD = "S?9piwUVE!"
#AUTH_LDAP_SEARCH_BASE = "OU=DELPHIDRIVE,DC=DelphiDrive,DC=com"
AUTH_LDAP_SERVER_URI = "ldap://10.142.11.35"
AUTH_LDAP_BIND_DN = "SID_PLBLOSECURITY@borgwarner.com"
AUTH_LDAP_BIND_PASSWORD = "S?9piwUVE!"
AUTH_LDAP_SEARCH_BASE = "DC=global,DC=borgwarner,DC=net"
AUTH_LDAP_USER_SEARCH = LDAPSearch(
    AUTH_LDAP_SEARCH_BASE, ldap.SCOPE_SUBTREE, "(samaccountname=%(user)s)")

AUTH_LDAP_USER_ATTR_MAP = {
    "username": "sAMAccountName",
    "first_name": "givenName",
    "last_name": "sn",
    "email": "mail",
}

'''
Dodawanie manualne u≈ºytkownika z LDAP: 
from django_auth_ldap.backend import LDAPBackend
user = LDAPBackend().populate_user('user_name')
'''

AUTHENTICATION_BACKENDS = [
    'django_auth_ldap.backend.LDAPBackend',
    'django.contrib.auth.backends.ModelBackend',
]

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-*=a^f+z=do2h70t-^x0kw%_o$#u(rb9d121f)69to5jtzsonjz'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

LANGUAGE_CODE = 'pl'
LANGUAGES = (
    ('en', _('English')),
    ('fr', _('French')),
    ('de', _('German')),
    ('pl', _('Polish')),
)

PARLER_LANGUAGES = {
    None: (
        {'code': 'en', },  # English
        {'code': 'fr', },  # French
        {'code': 'de', },  # German
        {'code': 'pl', },  # Polish
    ),
    'default': {
        'fallbacks': ['pl'],
        'hide_untranslated': True,
    }
}
PARLER_ENABLE_CACHING = True
PARLER_DEFAULT_ACTIVATE = True


# Application definition

INSTALLED_APPS = [
    'backups',
    'main',
    'fazit',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "django_extensions",
    'rosetta',
    'parler',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django_auto_logout.middleware.auto_logout',
    # 'language.DefaultLanguageMiddleware',
]

ROOT_URLCONF = 'PDS_Apps.urls'
SETTINGS_PATH = os.path.dirname(os.path.dirname(__file__))
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(SETTINGS_PATH, 'templates'),
                 os.path.join(BASE_DIR, 'backups', 'templates', 'backups'),
                 os.path.join(BASE_DIR, 'fazit', 'templates', 'fazit'),
                 os.path.join(BASE_DIR, 'main', 'templates', 'main')
                 ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.i18n',
                'django_auto_logout.context_processors.auto_logout_client',
            ],
        },
    },
]

TEMPLATE_DIRS = (
    os.path.join(SETTINGS_PATH, 'templates'),
)


WSGI_APPLICATION = 'PDS_Apps.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'djongo',
        'NAME': 'pds-apps',
        'CLIENT': {
            'host': 'mongodb://admin:blonie4321delphi@10.142.11.55:27017/?authMechanism=DEFAULT',
            # 'host': 'mongodb://python:delphi1234@10.142.11.55:27017/?authMechanism=DEFAULT&authSource=pds-apps',
        }
    },
}

MONGO = MongoClient(
    'mongodb://admin:blonie4321delphi@10.142.11.55:27017/?authMechanism=DEFAULT')
# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'pl'
TIME_ZONE = 'Europe/Warsaw'
DATETIME_FORMAT = 'H:i d.m.Y'
USE_I18N = True
USE_L10N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'badge\static')


# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field


DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')

LOCALE_PATHS = [
    BASE_DIR / 'locale/',
]

LOGIN_REDIRECT_URL = '/backups'
LOGIN_URL = reverse_lazy('login')
if DEBUG:
    # will output to your console
    logging.basicConfig(
        level=logging.INFO,
        format='%(asctime)s %(levelname)s %(message)s',
    )


# SMTP settings
EMAIL_HOST = '10.212.6.111'
EMAIL_SUBJECT_PREFIX = '[Backup Manager]'
EMAIL_TIMEOUT = 5

AUTO_LOGOUT = {
    'IDLE_TIME': 600,
    'REDIRECT_TO_LOGIN_IMMEDIATELY': True,
}
